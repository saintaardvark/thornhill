#!/usr/bin/perl -w

# thornhill: A Small but Useful(tm) utility to test Alias (and, in the
# future, other) directives found in an Apache config file.  Meant to
# be useful for ensuring that content on one server is the same as on
# another (ie, when migrating servers).  Version 0.3.
#
# See the README for details.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# Hugh Brown
# Jan 19, 2012
# Copyright (C) 2012 Hugh Brown
# Web:	 http://saintaardvarkthecarpeted.com/software/thornhill
# Email: aardvark [ta] saintaardvarkthecarpeted [tod] com

use strict;
use Getopt::Std;
use Test::More;
use Apache::Admin::Config;
use Test::WWW::Mechanize;
my %option;
my ($site, $altsite);
my $verbose = 0;
my $testing_only = 0;
my $matchme = "ServerName";
my ($vhost, $vh);
my ($i, $j, $url);
my $conf;

sub usage {
	print <<USAGE;

$0: A Small but Useful(tm) utility to test Alias (and, in the future,
other) directives found in an Apache config file.  Meant to be useful
for ensuring that content on one server is the same as on another (ie,
when migrating servers).  See the README for details.

Usage:

-s [site]	The name of the site you want to check.
-a [site]	Alternate site (ie, the place you're moving it to)
-f [file]	Path to the httpd config file.
-m [directive]  Use this directive to match VirtualHost config.
		Default: ServerName; possible alternative: ServerAlias.
-v		Be verbose.
-n		Testing only: show, do not do. Implies -v.
-h		This helpful message.
USAGE
	exit 1;
}

sub complain_and_die {
	my $error = shift;
	print STDERR "$error\n\n";
	&usage;
}

sub debug {
	if ($verbose > 0) {
		my $log = shift;
		print "$log\n";
	}
}

getopts('vnhs:a:f:m:', \%option);

if ($option{h}) {
	&usage;
}
&usage unless
  (defined $option{a} and
   defined $option{s} and
   defined $option{f});

if ($option{v}) {
	$verbose = 1;
}

if ($option{n}) {
	$testing_only = 1;
	$verbose = 1;
}

if (defined $option{s}) {
	$site = $option{s};
}
if (defined $option{a}) {
	$altsite = $option{a};
}
if (defined $option{m}) {
	$matchme = $option{m};
}

my $oldsite = Test::WWW::Mechanize->new;
my $newsite = Test::WWW::Mechanize->new;
$newsite->add_header('Host' => $site);

# load a conf file
$conf = new Apache::Admin::Config $option{f} or
  die $Apache::Admin::Config::ERROR;

foreach $vh ($conf->section('VirtualHost')) {
      if($vh->directive($matchme)->value eq $site) {
	      $vhost = $vh;
	      last;
      }
}

foreach $i ($vhost->directive("Alias")) {
	$url = ($i->value =~ /^(\S+)\s+(\S+)/)[0];
	$url = "http://${site}${url}";
	$oldsite->get_ok($url), "Can get $url at old");
	$newsite->get_ok($url), "Can get $url at new");
	is ($oldsite->content,
	    $newsite->content,
	    "$url same on both old and new");
}

foreach $i ($vhost->directive("ProxyPassReverse")) {
	$url = ($i->value =~ /^(\S+)\s+(\S+)/)[0];
	$url = "http://${site}${url}";
	$oldsite->get_ok($url);
	$newsite->get_ok($url);
	is ($oldsite->content,
	    $newsite->content,
	    "$url same on both old and new");
}

foreach my $i ($vhost->directive("Redirect")) {
	$j = ($i->value =~ /^(\S+)\s+(\S+)/)[0];
	print "FIXME: Not yet testing Redirect ${site}${j}\n";
}
foreach my $i ($vhost->directive("RedirectMatch")) {
	$j = ($i->value =~ /^(\S+)\s+(\S+)/)[0];
	print "FIXME: Not yet testing RedirectMatch ${site}$j\n";
}
done_testing();
exit;
